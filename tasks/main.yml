---
- name: upload SSH keys
  local_action:
    module: cs_sshkeypair
    name: "{{ lookup('env', 'USER') }}"
    public_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    project: "{{ cs_project }}"
    account: "{{ cs_account }}"
    domain: "{{ cs_domain }}"
    api_region: "{{ cs_region }}"
  run_once: yes

- name: create VM instance started
  local_action:
    module: cs_instance
    name: "{{ cs_instance_name }}"
    display_name: "{{ cs_instance_display_name | default(omit) }}"
    group: "{{ cs_group | default(omit) }}"
    template: "{{ cs_template }}"
    service_offering: "{{ cs_offering }}"
    ssh_key: "{{ lookup('env', 'USER') }}"
    zone: "{{ cs_zone }}"
    project: "{{ cs_project }}"
    account: "{{ cs_account }}"
    domain: "{{ cs_domain }}"
    networks: "{{ cs_networks }}"
    force: "{{ cs_force }}"
    api_region: "{{ cs_region }}"
    user_data: "{{ lookup('template', cs_instance_userdata_template ) }}"
    state: started

- name: setup port forwardings
  local_action:
    module: cs_portforward
    ip_address: "{{ item.public_ip | default(cs_public_ip) }}"
    vm: "{{ item.vm | default(cs_instance_name) }}"
    public_port: "{{ item.public_port }}"
    private_port: "{{ item.private_port | default(item.public_port) }}"
    protocol: "{{ item.protocol | default('tcp') }}"
    project: "{{ cs_project }}"
    account: "{{ cs_account }}"
    domain: "{{ cs_domain }}"
    zone: "{{ cs_zone }}"
    state: "{{ item.state | default('present') }}"
    vpc: "{{ cs_vpc }}"
    api_region: "{{ cs_region }}"
  with_items: "{{ cs_portforwarding_rules }}"
  when: (cs_public_ip != "" or item.public_ip is defined) and cs_portforwarding_rules

- name: create static NAT
  local_action:
    module: cs_staticnat
    ip_address: "{{ cs_public_ip }}"
    project: "{{ cs_project }}"
    account: "{{ cs_account }}"
    domain: "{{ cs_domain }}"
    zone: "{{ cs_zone }}"
    vm: "{{ cs_instance_name }}"
    vpc: "{{ cs_vpc }}"
    network: "{{ cs_staticnat_network }}"
    api_region: "{{ cs_region }}"
  when: cs_public_ip != "" and not cs_portforwarding_rules

- name: open firewall port icmp
  local_action:
    module: cs_firewall
    ip_address: "{{ item.public_ip | default(cs_public_ip) }}"
    protocol: "icmp"
    cidr: "{{ item.cidr | default('0.0.0.0/0') }}"
    icmp_type: "{{ item.icmp_type | default(-1) }}"
    icmp_code: "{{ item.icmp_code | default(-1) }}"
    project: "{{ cs_project }}"
    account: "{{ cs_account }}"
    domain: "{{ cs_domain }}"
    zone: "{{ cs_zone }}"
    api_region: "{{ cs_region }}"
  with_items: "{{ cs_firewall_rules }}"
  when: (cs_public_ip != "" or item.public_ip is defined) and cs_firewall_rules and item.protocol is defined and item.protocol == 'icmp'

- name: open firewall ports tcp/udp
  local_action:
    module: cs_firewall
    ip_address: "{{ item.public_ip | default(cs_public_ip) }}"
    start_port: "{{ item.start_port }}"
    end_port: "{{ item.end_port | default(item.start_port) }}"
    protocol: "{{ item.protocol | default('tcp') }}"
    cidr: "{{ item.cidr | default('0.0.0.0/0') }}"
    project: "{{ cs_project }}"
    account: "{{ cs_account }}"
    domain: "{{ cs_domain }}"
    zone: "{{ cs_zone }}"
    api_region: "{{ cs_region }}"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ cs_firewall_rules }}"
  when: (cs_public_ip != "" or item.public_ip is defined) and cs_firewall_rules and (item.protocol is not defined or item.protocol != 'icmp')

- name: remember which host to check for SSH
  set_fact:
    ansible_check_host: "{{ ansible_host }}"

- name: waiting for SSH to come up for
  wait_for:
    port: "{{ ansible_port | default(22) }}"
    host: "{{ ansible_check_host }}"
  delegate_to: "{{ cs_jumphost }}"

- name: add additonal volume to VM
  local_action:
    module: cs_volume
    vm: "{{ cs_instance_name }}"
    name: "{{ cs_disk_name | default('DATA-' + cs_instance_name) }}"
    disk_offering: "{{ cs_disk_offering }}"
    size: "{{ cs_disk_size }}"
    project: "{{ cs_project }}"
    account: "{{ cs_account }}"
    domain: "{{ cs_domain }}"
    zone: "{{ cs_zone }}"
    api_region: "{{ cs_region }}"
    state: attached
  when: cs_disk
